##base _SysBase
##bias 30
##private
*------ special functions ---------------------------------------------
Supervisor()
ExitIntr()
Schedule()
Reschedule()
Switch()
Dispatch()
Exception()
##public
InitCode(startClass,version)(D0/D1)
InitStruct(initTable,memory,size)(A1/A2,D0)
MakeLibrary(funcInit,structInit,libInit,dataSize,codeSize)(A0/A1/A2,D0/D1)
MakeFunctions(target,functionArray,funcDispBase)(A0,A1,A2)
FindResident(name)(A1)
InitResident(resident,segList)(A1,D1)
Alert(alertNum,parameters)(D7,A5)
Debug()
*------ interrupts ----------------------------------------------------
Disable()
Enable()
Forbid()
Permit()
SetSR(newSR,mask)(D0/D1)
SuperState()
UserState(sysStack)(D0)
SetIntVector(intNumber,interrupt)(D0/A1)
AddIntServer(intNumber,interrupt)(D0/A1)
RemIntServer(intNumber,interrupt)(D0/A1)
Cause(interrupt)(A1)
*------ memory allocation: ---------------------------------------------
Allocate(freeList,byteSize)(A0,D0)
Deallocate(freeList,memoryBlock,byteSize)(A0/A1,D0)
AllocMem(byteSize,requirements)(D0/D1)
AllocAbs(byteSize,location)(D0/A1)
FreeMem(memoryBlock,byteSize)(A1,D0)
AvailMem(requirements)(D1)
AllocEntry(entry)(A0)
FreeEntry(entry)(A0)
*------ lists: ---------------------------------------------------------
Insert(list,node,pred)(A0/A1/A2)
AddHead(list,node)(A0/A1)
AddTail(list,node)(A0/A1)
Remove(node)(A1)
RemHead(list)(A0)
RemTail(list)(A0)
Enqueue(list,node)(A0/A1)
FindName(list,name)(A0/A1)
*------ tasks: ---------------------------------------------------------
AddTask(task,initPC,finalPC)(A1/A2/A3)
RemTask(task)(A1)
FindTask(name)(A1)
SetTaskPri(task,priority)(A1,D0)
SetSignal(newSignals,signalSet)(D0/D1)
SetExcept(newSignals,signalSet)(D0/D1)
Wait(signalSet)(D0)
Signal(task,signalSet)(A1,D0)
AllocSignal(signalNum)(D0)
FreeSignal(signalNum)(D0)
AllocTrap(trapNum)(D0)
FreeTrap(trapNum)(D0)
*------ messages: ------------------------------------------------------
AddPort(port)(A1)
RemPort(port)(A1)
PutMsg(port,message)(A0/A1)
GetMsg(port)(A0)
ReplyMsg(message)(A1)
WaitPort(port)(A0)
FindPort(name)(A1)
*------ libraries: -----------------------------------------------------
AddLibrary(library)(A1)
RemLibrary(library)(A1)
OldOpenLibrary(libName)(A1)
CloseLibrary(library)(A1)
SetFunction(library,funcOffset,funcEntry)(A1,A0,D0)
SumLibrary(library)(A1)
*------ devices: -------------------------------------------------------
AddDevice(device)(A1)
RemDevice(device)(A1)
OpenDevice(devName,unit,ioRequest,flags)(A0,D0/A1,D1)
CloseDevice(ioRequest)(A1)
DoIO(ioRequest)(A1)
SendIO(ioRequest)(A1)
CheckIO(ioRequest)(A1)
WaitIO(ioRequest)(A1)
AbortIO(ioRequest)(A1)
*------ resources: ----------------------------------------------------
AddResource(resource)(A1)
RemResource(resource)(A1)
OpenResource(resName,version)(A1,D0)
*------ new functions:
##private
RawIOInit()
RawMayGetChar()
RawPutChar(char)(d0)
RawDoFmt()(A0/A1/A2/A3)
##public
GetCC()
TypeOfMem(address)(A1);
Procure(semaport,bidMsg)(A0/A1)
Vacate(semaport)(A0)
OpenLibrary(libName,version)(A1,D0)
*------ 1.2 new semaphore support
InitSemaphore(sigSem)(A0)
ObtainSemaphore(sigSem)(A0)
ReleaseSemaphore(sigSem)(A0)
AttemptSemaphore(sigSem)(A0)
ObtainSemaphoreList(sigSem)(A0)
ReleaseSemaphoreList(sigSem)(A0)
FindSemaphore(sigSem)(A1)
AddSemaphore(sigSem)(A1)
RemSemaphore(sigSem)(A1)
*------ 1.2 rom "kickstart" support + memory support
SumKickData()
AddMemList(size,attributes,pri,base,name)(D0/D1/D2/A0/A1)
CopyMem(source,dest,size)(A0/A1,D0)
CopyMemQuick(source,dest,size)(A0/A1,D0)
##end
