; Replacement load routine for Flying Shark. This also includes the binary game data before the level load.

; cd /d C:\Work\DebuggingDetails
; ..\c64\acme.exe --lib ..\C64\ --msvc -v9 "Flying Shark.a"

!source "stdlib/stdlib.a"
!to "FlyingSharkLoader.prg", cbm
!sal
!sl "FlyingSharkLoader.map"
!svl "FlyingSharkLoader.lbl"
!pdb "FlyingSharkLoader.pdb"
!cpu 6510
!ct pet

kStartOffset = $200 - 2

* = $300
!bin "c:\temp\fs\gamestart 1000.prg" , ($a00-$300) , * - kStartOffset

* = $a00
	jmp DoLoad
	jmp FlashBorder
	jmp FlashBorder

; Call this to boot the game with default init
BootGame
	+MStopInitStack_X
	+MByteValueToAddress_A ProcessorPortDefault , ZPProcessorPort
	jmp $1000
	
; Indicate an error if these entry points are actually used by the game
FlashBorder
	+MDebugBreak
	

	
DoLoad
	pha
	; low nybble
	and #$0f
	tax
	lda .numToHexTab,x
	sta .fileNameStart+1
	pla
	; High nybble
	lsr
	lsr
	lsr
	lsr
	tax
	lda .numToHexTab,x
	sta .fileNameStart
	
	+SetDefaultScreenLowerCase_A
	lda #VIC2Colour_Black
	sta VIC2ScreenColour
	sta VIC2BorderColour
	+ClearScreenAtWithA_X COLOURRAM
	+DisplayColourTextAt_AX .loadingStart , .loadingEnd , SCREENRAM + (VIC2ScreenCharsWidth * (VIC2ScreenCharsHeight-1)), VIC2Colour_White

	lda #1
	ldx ZPCurrentFileDeviceNumber
	ldy #1
	jsr SETLFS

	lda #2
	ldx #<.fileNameStart
	ldy #>.fileNameStart
	jsr SETNAM

	lda #0
	jmp LOAD

.loadingStart
	!scr "Loading file "
.fileNameStart !by 0 , 0
.loadingEnd

.numToHexTab
	!tx "0123456789abcdef"

* = $d00
!bin "c:\temp\fs\gamestart 1000.prg" , ($10000-*) , * - kStartOffset
